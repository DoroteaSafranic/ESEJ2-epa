
install.packages(c("ggplot2", "dplyr", "readr"))
library(ggplot2)
library(dplyr)
library(readr)

data <- read_delim("zastupnici.csv", delim = ";", show_col_types = FALSE)


print(names(data))

education_chart <- data %>%a
  filter(Obrazovanje %in% c("VSS", "SSS", "VŠS")) %>%
  count(Obrazovanje) %>%
  ggplot(aes(x = Obrazovanje, y = n, fill = Obrazovanje)) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(title = "Razina obrazovanja saborskih zastupnika",
       x = "razina obrazovanja", y = "količina zastupnika")

print(education_chart)

top_cities_chart <- data %>%
  count(`Geografsko podrijetlo`) %>%
  top_n(10, n) %>%
  ggplot(aes(x = reorder(`Geografsko podrijetlo`, -n), y = n, fill = `Geografsko podrijetlo`)) +
  geom_bar(stat = "identity") +
  geom_text(aes(label = n), vjust = -0.3) +
  theme_minimal() +
  labs(title = "10 gradova sa najvećim brojem zastupnika",
       x = "Grad", y = "Broj zastupnika") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


print(top_cities_chart)


# Ensure necessary packages are installed
install.packages(c("ggplot2", "sf", "dplyr", "readr", "rnaturalearth", "rnaturalearthdata", "ggmap", "tidyverse", "devtools"))

# Load the libraries
library(ggplot2)
library(sf)
library(dplyr)
library(readr)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggmap)
library(tidyverse)
library(devtools)

# Ensure rnaturalearthhires package is installed for high resolution data
if (!requireNamespace("rnaturalearthhires", quietly = TRUE)) {
  devtools::install_github("ropensci/rnaturalearthhires")
}
library(rnaturalearthhires)

register_google(key = "AIzaSyDMvKs3ukBbGm291s1rFBbAEaPIEgXBYrc")


data <- read_delim("zastupnici.csv", delim = ";", show_col_types = FALSE)

cities <- unique(data$'Geografsko podrijetlo')

geocoded_data <- data.frame(city = character(), lon = numeric(), lat = numeric(), stringsAsFactors = FALSE)

for (city in cities) {
  result <- geocode(city, output = "latlon", source = "google")
  if (!is.na(result$lon) & !is.na(result$lat)) {
    geocoded_data <- rbind(geocoded_data, data.frame(city = city, lon = result$lon, lat = result$lat))
  }
}


write_csv(geocoded_data, "geocoded_cities.csv")


croatia <- ne_countries(scale = "medium", returnclass = "sf") %>%
  filter(name == "Croatia")

croatia_with_cities <- left_join(croatia, geocoded_data, by = character())

ggplot() +
  geom_sf(data = croatia_with_cities, fill = "lightblue", color = "black", size = 0.5) +
  geom_point(data = geocoded_data, aes(x = lon, y = lat), color = "red", size = 3) +
  theme_minimal() +
  labs(title = "Map of Croatia with Cities", x = "Longitude", y = "Latitude") +
  coord_sf(xlim = c(13, 20), ylim = c(42, 47))  # Adjust the limits to focus on Croatia
